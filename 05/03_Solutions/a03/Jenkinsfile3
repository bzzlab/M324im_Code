pipeline {
  environment {
      //registry
      registry = "<your docker-hub-account>/traffic-api"//??
      //registryCredential
      registryCredential = 'dockerhub'//??
      //container variable
      container='traffic-api'//??
  }
  agent any
  tools {nodejs "node"}
  stages {
      stage('Cloning Repo') {
              steps {
                script {
                    git branch: 'main', //??
                    url: 'https://github.com/<your public-repo>.git' //??
             }
           }
      }
      stage('Building image') {
        steps{
          script {
            docker.build registry+":$BUILD_NUMBER"//??
          }
        }
      }

     stage('Install jest-cli') {
        steps {
            script {
                /*
                set +e: Allows the script to continue even if a command fails.
                */
                sh """
                    set +e //??
                    PACKAGE=\$(npm ls -g -p | grep jest-cli) //??
                    if [ -z "\$PACKAGE" ]; then //??
                        echo "Installing jest-cli ..." //??
                        npm install jest-cli -g //??
                        if [ \$? -ne 0 ]; then //??
                            echo "Failed to install jest-cli!" //??
                            exit 1 //??
                        fi //??
                    else //??
                        echo "jest-cli is already installed!" //??
                    fi //??
                    set -e //??
                """
            }
        }
    }

      stage('Install dependencies') {
        steps {
          sh 'npm install'
        }
      }

      stage('Run container for testing') {
        steps {
          sh 'docker run -itd --rm -p 3000:3000 --name $container $registry:$BUILD_NUMBER'//??
        }
      }
      stage('Test') {
        steps {
           sh 'npm test'
        }
      }

      stage('Remove traffic container') {
        steps{
          sh "docker stop $container"//??
        }
      }

      stage('Remove Unused docker image') {
        steps{
          sh "docker rmi $registry:$BUILD_NUMBER"//??
        }
      }
    }
}
